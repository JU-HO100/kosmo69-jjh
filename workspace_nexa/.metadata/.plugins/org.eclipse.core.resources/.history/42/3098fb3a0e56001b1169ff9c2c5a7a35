package com.mvc.dept;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.print.attribute.standard.PresentationDirection;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.log4j.Logger;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.google.gson.Gson;
import com.nexacro17.xapi.data.DataSet;
import com.nexacro17.xapi.data.DataTypes;
import com.nexacro17.xapi.data.PlatformData;
import com.nexacro17.xapi.data.VariableList;
import com.nexacro17.xapi.tx.HttpPlatformRequest;
import com.nexacro17.xapi.tx.HttpPlatformResponse;
import com.nexacro17.xapi.tx.PlatformException;
import com.nexacro17.xapi.tx.PlatformType;

@RestController
@RequestMapping("/dept/*")
public class RestDeptController {
	Logger logger = Logger.getLogger(RestDeptController.class);
	
	private DeptLogic deptLogic = null;
	@RequestMapping(value="getName.kosmo",produces="application/json;charset=UTF-8")
	public String getDept() {
		List<Map<String,Object>> deptList = new ArrayList<>();
		//DB에서 가져와서 출력하기
		//DeptDao.java, Configure.xml, dept.xml
		//MVC패턴 얹어서 개발을 진행해야 함
		//파이썬은 모두 필요없다.
		//
		Map<String,Object> rMap = new HashMap<>();
		rMap.put("deptno",10);
		rMap.put("dame","영업");
		rMap.put("loc","부산");
		deptList.add(rMap);
		rMap = new HashMap<>();
		rMap.put("deptno",20);
		rMap.put("dame","총무");
		rMap.put("loc","서울");
		deptList.add(rMap);
		rMap = new HashMap<>();
		rMap.put("deptno",30);
		rMap.put("dame","인사");
		rMap.put("loc","경기");
		deptList.add(rMap);
		
		Gson g = new Gson();
		String imsi = g.toJson(deptList);
		return imsi;
	}
	@GetMapping(value="deptXML.kosmo",produces="application/json;charset=UTF-8")
	public void deptXML(HttpServletRequest req, HttpServletResponse res) throws PlatformException
	{
		logger.info("deptXML 호출");
		int nErrorCode = -1;//넥사크로 스크립트에서 스프링을 통해 처리된 결과를 콜백 함수를 통해서 받을 수 있는 에러 코드값
		String strErrorMsg = "Start";
		HttpPlatformRequest nreq = new HttpPlatformRequest(req);
		nreq.receiveData();
		//넥사크로에서 제공하는 데이터셋에 담긴 정보를 자바코드에서 읽어오기 위한 코드
		PlatformData in_ndata = nreq.getData();
		//자바에서 조회한 결과를 데이터셋에 담기 위한 객체 생성
		//여기에 생성한 데이터셋을 추가한다.
		PlatformData out_ndata = new PlatformData();
		//넥사크로에서 제공하는 데이터셋을 자바코드로 제공하는 클래스이다.
		DataSet ids_dept = in_ndata.getDataSet("in_dept");//화면에서 넘어온 데이터셋을 읽기위한 코드
		//자바를 이용한 오라클 서버에서 select한 결과를 담을 데이터셋 언언
		DataSet ods_dept = new DataSet("out_dept");//화면에서 넘어온 데이터셋을 읽기위한 코드
		//데이터셋 초기화 - 자바
		ods_dept.addColumn("deptno",DataTypes.INT,(short)10);
		ods_dept.addColumn("dname",DataTypes.STRING,(short)100);
		ods_dept.addColumn("loc",DataTypes.STRING,(short)50);
		List<Map<String,Object>> deptList = null;
		deptList = deptLogic.deptList();
		for(int i=0;i<deptList.size();i++) {
			Map<String,Object> rmap = deptList.get(i);
			//데이터셋에 로우를 추가해 주어야 조회된 결과를 담을 수 있다.
			int row = ods_dept.newRow();
			ods_dept.set(row,"deptno", rmap.get("DEPTNO"));
			ods_dept.set(row,"dname", rmap.get("DNAME"));
			ods_dept.set(row,"loc", rmap.get("LOC"));
		}
		out_ndata.addDataSet(ods_dept);
		nErrorCode = 0;
		strErrorMsg = "DEPT 조회 성공";
		VariableList varList = out_ndata.getVariableList();
		varList.add("ErrorCode",nErrorCode);
		varList.add("strErrorMsg",strErrorMsg);
		HttpPlatformResponse pres = new HttpPlatformResponse(res,PlatformType.CONTENT_TYPE_XML,"utf-8");
		pres.setData(out_ndata);
		//전송 마임타입 xml
		pres.sendData();
	}
	@RequestMapping("total.kosmo")
	public String total() {
		
		return "10";
	}
	@RequestMapping(value="getName.kosmo",produces="application/json;charset=UTF-8")
	public String getName() {
		
		return "한글";
	}
}
