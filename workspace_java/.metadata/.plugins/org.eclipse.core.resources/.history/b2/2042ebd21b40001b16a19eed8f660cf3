package com.example.demo;

import java.util.List;
import java.util.Map;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

@Controller
//서블릿을 직접 상속받는 대신에 어노테이션을 사용해서 결합도를 낮추었다.
//두번째는 메소드의 파라미터 자리에 request와 response가 없는데도 메소드가 호출되었다.
//이것은 더이상 request 객체나 response객체에 의존적이지 않다는 것이다.  없어도 웹서비스를 제공할 수 있다.

@RequestMapping("/board/*")
public class BoardController {
   Logger logger = LogManager.getLogger(BoardController.class);
   
   //Autowired는 setter메소드를 굳이 쓰지 않더라도 객체주입을 받을 수 있게 해준다.
   @Autowired
   public BoardLogic boardLogic = null;
   
   ///////////////////////////////////////////////////////////////////////////////////////////
   @RequestMapping("writeForm.sp3")
   public String writeForm() 
   {
      logger.info("writeForm 메소드 호출 성공! ");
      return "board/writeForm";
   }
   /////////////////////////////////////////////////////////////////////////////////////////// 
  
   @RequestMapping("/boardInsert.sp3")   
   public String boardInsert(@RequestParam Map<String,Object> pMap) {      
      logger.info("BoardController boardInsert 호출성공 !"+pMap);                     
      int result = 0;
      result = boardLogic.boardInsert(pMap);
      logger.info("최종 result >> "+result);               
      return "redirect:boardInsertOk.jsp";
   }
   @RequestMapping("/boardList.sp3")   
   public String boardList(@RequestParam Map<String,Object> pMap) {      //@RequestParam을 사용하면  url에 입력한 값을 읽어올 수 있다.
      logger.info("BoardController boardList 호출성공 !"+pMap);            //Map을 찍기 떄문에 {} 안에 출력된다.               
      //String pmem_id = req.getParameter("mem_id");                  // request.getParameter대신 사용하는것. 반복되는 코드를 줄여준다.
      List<Map<String,Object>> bList = null;
      bList = boardLogic.boardList(pMap);
      return "forward:list.jsp";
   }
   
   
}