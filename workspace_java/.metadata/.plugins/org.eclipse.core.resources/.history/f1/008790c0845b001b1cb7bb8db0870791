package np.com.controller;


import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.fasterxml.jackson.databind.JsonNode;

import np.mem.model.KakaoDao;
import np.mem.model.MemberDao;

@Controller
@RequestMapping("/*")
public class LoginController {
	Logger logger = Logger.getLogger(LoginController.class);
	
	@Autowired
    private KakaoDao kakao;
	
	@Autowired
	private MemberDao memDao;
	String path = null;
	String name = null;
	
		@RequestMapping(value="/")
	    public String index() {
	        logger.info("Con index");
	        return "index";
	    }
	    
		@RequestMapping(value="member/index.np")
		public String login(HttpSession session,  @RequestParam("code") String code, HttpServletRequest req) throws Exception {
//		public String login(HttpSession session, HttpServletRequest req) throws Exception {
//			JsonNode userInfo = kakaoLogin.getKakaoUserInfo(code);
	        if((String)req.getAttribute("kakaoNick")!=null) {
	        	name = (String)req.getAttribute("kakaoNick");
	        } else {
	        	path = "redirect:login.jsp";
	        }
	        logger.info("name"+name);
	        if (name != null) {
	        	logger.info("Con 세션 도착");
	        	path = "forward:index.jsp";
	        } else {
	        	logger.info("Con 세션 도착 실패");
	        	path = "forward:index2.jsp";
	        }
	        return path;
	    }
	
	@RequestMapping("nLogin.np")
	public String nLogin(HttpSession session, @RequestParam Map<String, Object> pmap) {
		String path = null;
		logger.info("nLogin 호출");
		List<Map<String, Object>> list = memDao.Login(pmap);
		logger.info("NaverC - nick, id list or msg" + list);
		for (Map<String, Object> map : list) {
			if (map.get("MSG") == null) { 
				session.setAttribute("id", map.get("M_ID"));
				session.setAttribute("nick", map.get("M_NICK"));
				session.setMaxInactiveInterval(300);// 세션유지시간 30분
				path = "forward:index2.jsp";
			} else {
				path = "forward:/recipe/ok.jsp";//로그인 안됐을때 보낼 페이지
			}
		}
		logger.info(session.getAttribute("id"));
		logger.info(session.getAttribute("nick"));
		return path;
	}
}
