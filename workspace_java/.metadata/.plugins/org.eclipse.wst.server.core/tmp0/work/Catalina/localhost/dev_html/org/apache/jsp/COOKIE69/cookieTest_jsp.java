/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.38
 * Generated at: 2021-01-17 00:45:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.COOKIE69;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class cookieTest_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>cookie관리[jquery API활용하기]</title>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://code.jquery.com/jquery-3.4.1.js\"></script>\r\n");
      out.write("<!-- <script src=\"https://cdn.jsdelivr.net/npm/js-cookie@rc/dist/js.cookie.min.js\"></script> --><!-- 리액트용 -->\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery-cookie/1.4.1/jquery.cookie.min.js\"></script>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\t#d_cookie{\r\n");
      out.write("\t\tborder: 1px solid black;\r\n");
      out.write("\t\tbackground: pink;\r\n");
      out.write("\t\twidth: 500px;\r\n");
      out.write("\t\theight: 250px;\r\n");
      out.write("\t\toverflow:auto;\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t$(document).ready(function (){\r\n");
      out.write("\t\t$(\"#btn_make\").click(function(){\r\n");
      out.write("\t\t\t$.cookie('c_id','tomato');\r\n");
      out.write("\t\t\t//현재 내가 바라보는 경로에서만 유지된다. 즉 COOKIE69안에서만 유지된다. AJAX에서는 유지 불가하다. 왜? path가 다르니까.- path정보를 관리하기 때문에\r\n");
      out.write("\t\t\t$.cookie('c_gender','남자',{expires:1, path:'/dev_html/ajax', domain:'localhost', secure: false});\r\n");
      out.write("\t\t\t/* c_gender의 경우 확인을 할 수가 없다. path가 다르기 때문이다. */\r\n");
      out.write("\t\t\t$.cookie('c_name','이순신',{expires:7, path:'/', domain:'localhost', secure:false});\r\n");
      out.write("\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t$(\"#btn_update\").click(function(){\r\n");
      out.write("\t\t\t$.cookie('c_id','apple');\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t$(\"#btn_delete\").click(function(){\r\n");
      out.write("\t\t\t$.cookie('c_id',null);\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t$(\"#btn_move\").click(function(){\r\n");
      out.write("\t\t\tlocation.href=\"cookieMove.jsp\";\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t$(\"#btn_confirm\").click(function(){\r\n");
      out.write("\t\t\t$(\"#d_cookie\").append('c_id:'+$.cookie('c_id')+\"<br>\");\r\n");
      out.write("\t\t\t$(\"#d_cookie\").append('c_gender:'+$.cookie('c_gender')+\"<br>\");\r\n");
      out.write("\t\t\t$(\"#d_cookie\").append('c_name:'+$.cookie('c_name')+\"<br>\");\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write("<div id=\"d_cookie\">쿠키정보 전광판<br><br></div>\r\n");
      out.write("<button id=\"btn_make\">쿠키생성</button>\r\n");
      out.write("<button id=\"btn_update\">쿠키수정</button>\r\n");
      out.write("<button id=\"btn_delete\">쿠키삭제</button>\r\n");
      out.write("<button id=\"btn_move\">페이지이동</button>\r\n");
      out.write("<button id=\"btn_confirm\">쿠키값 확인</button>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
