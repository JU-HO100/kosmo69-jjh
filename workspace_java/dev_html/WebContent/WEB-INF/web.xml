<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
<!-- 
server.xml은 톰캣 서버가 기동할때 디폴트로 읽음
포트번호를 결정
프로젝트를 배치한다.

 -->
<!-- log4j 환경파일 등록하기 
서버가 기동된 동안에는 계속 유지되어야 한다.

-->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/classes/log4j.properties</param-value>
	</context-param>
		<servlet>
		<servlet-name>A3Servlet</servlet-name>
		<servlet-class>com.basic.A3</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>A3Servlet</servlet-name>
		<url-pattern>/EasyUI/a3.do</url-pattern>
	</servlet-mapping>
<!-- DD파일(Deployment Descriptor 배치서술자 -->
	<servlet>
		<servlet-name>testMgr</servlet-name>
		<servlet-class>web.mvc.TestController</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>testMgr</servlet-name>
		<url-pattern>/test/test.do</url-pattern><!-- .do는 다른것을 써도 상관없다. 그저 인터셉터하기 위해 넣었다. -->
	</servlet-mapping>
	
	<servlet>
		<servlet-name>deptMgr</servlet-name>
		<servlet-class>web.mvc.DeptServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>deptMgr</servlet-name>
		<url-pattern>/ch17/imsi/getDeptList.kos</url-pattern><!-- .do는 다른것을 써도 상관없다. 그저 인터셉터하기 위해 넣었다. -->
	</servlet-mapping>
	
	<servlet>
		<servlet-name>commonJSON</servlet-name>
		<servlet-class>com.util.PrintJson</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>commonJSON</servlet-name>
		<url-pattern>/common/toJson.do</url-pattern><!-- .do는 다른것을 써도 상관없다. 그저 인터셉터하기 위해 넣었다. -->
	</servlet-mapping>
	
	<servlet>
		<servlet-name>JsonServlet</servlet-name><!-- Json 대문자로 쓰지 않아도 된다 별칭을 정한거기 때문이다. -->
		<servlet-class>book.ch17.JsonServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>JsonServlet</servlet-name>
		<url-pattern>/json/jsonList</url-pattern><!-- .do는 다른것을 써도 상관없다. 그저 인터셉터하기 위해 넣었다. -->
	</servlet-mapping>
	
	<servlet>
		<servlet-name>ServletBoard</servlet-name><!-- Json 대문자로 쓰지 않아도 된다 별칭을 정한거기 때문이다. -->
		<servlet-class>com.ajax.BoardServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>ServletBoard</servlet-name>
		<url-pattern>/board/bsell.do</url-pattern><!-- .do는 다른것을 써도 상관없다. 그저 인터셉터하기 위해 넣었다. -->
	</servlet-mapping>
	
	<!-- FrontController 실습 시작 -->
	<servlet>
		<servlet-name>FrontController</servlet-name><!-- Json 대문자로 쓰지 않아도 된다 별칭을 정한거기 때문이다. -->
		<servlet-class>com.ajax.news.FrontController</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>FrontController</servlet-name>
		<url-pattern>*.mem</url-pattern><!-- .do는 다른것을 써도 상관없다. 그저 인터셉터하기 위해 넣었다. -->
	</servlet-mapping>
	<!-- FrontController 실습 끝 -->
	
	<!-- onlineTest 실습 시작 -->
	<servlet>
		<servlet-name>MVC1</servlet-name><!-- Json 대문자로 쓰지 않아도 된다 별칭을 정한거기 때문이다. -->
		<servlet-class>mvc1.online.FrontMVC1</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>MVC1</servlet-name>
		<url-pattern>*.test</url-pattern><!-- .do는 다른것을 써도 상관없다. 그저 인터셉터하기 위해 넣었다. -->
	</servlet-mapping>
	<!-- onlineTest 실습 끝 -->

	<!-- onlineTest MVC패턴 1-2 실습 시작 -->
	<servlet>
		<servlet-name>MVC2</servlet-name><!-- Json 대문자로 쓰지 않아도 된다 별칭을 정한거기 때문이다. -->
		<servlet-class>mvc2.online.ActionServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>MVC2</servlet-name>
		<url-pattern>*.sp2</url-pattern><!-- .do는 다른것을 써도 상관없다. 그저 인터셉터하기 위해 넣었다. -->
	</servlet-mapping>
	<!-- onlineTest MVC패턴 1-2 실습 끝 -->

	<!-- RepServlet 실습 시작 -->
	<servlet>
		<servlet-name>ErpServlet</servlet-name><!-- Json 대문자로 쓰지 않아도 된다 별칭을 정한거기 때문이다. -->
		<servlet-class>web.mvc.ErpServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>ErpServlet</servlet-name>
		<url-pattern>*.kos</url-pattern><!-- .do는 다른것을 써도 상관없다. 그저 인터셉터하기 위해 넣었다. -->
	</servlet-mapping>
	<!-- RepServlet 실습 끝 -->
	
	
<!-- jsp는 요구에 따라 sjon의 역할 혹은 xml의 역할도 자주 담당한다.
	 이때 맨 위에 white space가 들어가는 문제가 있음 이것을 제거하기 위해서
	 web.xml 문서에 처리하면 jsp문서 모두에 대해 일과적용 가능하다.
	 jsp페이지에 일일이 하나하나 처리하는 것보다 효율적이다.
 -->
 	<jsp-config>
	 	<jsp-property-group>
	 		<url-pattern>*.jsp</url-pattern>
	 		<trim-directive-whitespaces>true</trim-directive-whitespaces>
	 	</jsp-property-group>
	 </jsp-config>
	 <resource-ref>
	 	<description>Connection</description>
	 	<res-ref-name>jdbc/dbPool</res-ref-name>
	 	<res-type>javax.sql.DataSource</res-type>
		<res-auth>Container</res-auth>
	 </resource-ref>
	 <session-config>
	 	<session-timeout>30</session-timeout>
	 </session-config>
</web-app>