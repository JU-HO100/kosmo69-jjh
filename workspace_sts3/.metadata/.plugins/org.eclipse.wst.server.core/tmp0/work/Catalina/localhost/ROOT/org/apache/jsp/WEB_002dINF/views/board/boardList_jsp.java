/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.38
 * Generated at: 2021-01-05 01:16:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import java.util.HashMap;
import java.util.Map;

public final class boardList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/common/easyUI_common.jsp", Long.valueOf(1608771953305L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.util.Map");
    _jspx_imports_classes.add("java.util.HashMap");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");

   int tot = 0;
   List<Map<String,Object>> boardList = null;
   boardList = (List<Map<String,Object>>)request.getAttribute("boardList");
   if(boardList !=null){
      tot = boardList.size();
   }
   

      out.write("        \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>게시판 목록[WEB-INF/views/]</title>\r\n");
      out.write("<!-- ìì¤ê° íëë¡ í©ì³ì§ëê¹ ì ì¸ë¬¸ì´ ë ë² ì¬ íììë¤. -->\r\n");
      out.write("\t<link rel=\"shortcut icon\" href=\"image/favicon.ico\">\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://www.jeasyui.com/easyui/themes/default/easyui.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://www.jeasyui.com/easyui/themes/icon.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://www.jeasyui.com/easyui/themes/color.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://www.jeasyui.com/easyui/demo/demo.css\">\r\n");
      out.write("    <script type=\"text/javascript\" src=\"https://www.jeasyui.com/easyui/jquery.min.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"/js/commons.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"https://www.jeasyui.com/easyui/jquery.easyui.min.js\"></script>\r\n");
      out.write("    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery-cookie/1.4.1/jquery.cookie.min.js\"></script>");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("//상세보기 페이지 이동 - read.jsp - 오라클 경유 - select인데 조건절이 포함.\r\n");
      out.write("//로직과 Dao는 동일하게 사용하더라도 컨트롤계층의 메소드는 다르게 정의함.\r\n");
      out.write("//왜냐하면 응답페이지가 다르니까 boardList.jsp, read.jsp\r\n");
      out.write("   function boardDetail(p_bmno){\r\n");
      out.write("      location.href=\"/board/boardDetail.sp?bm_no=\"+p_bmno\r\n");
      out.write("   }\r\n");
      out.write("   function refresh(){\r\n");
      out.write("      //alert(\"refresh호출\");\r\n");
      out.write("      location.href=\"/board/boardList.sp\";      \r\n");
      out.write("   }\r\n");
      out.write("   function downlaod(pbs_file){\r\n");
      out.write("      location.href=\"./downLoad.jsp?bs_file=\"+pbs_file;\r\n");
      out.write("   }\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("   function addForm(){\r\n");
      out.write("      let url=\"writeForm.sp\";//var대신 ECMAScript제안한 let예약어 사용할것.- Reat.js, Vue.js, TypeScript.js\r\n");
      out.write("      cmm_window_popup(url,\"700px\",\"500px\",\"writeForm\");      \r\n");
      out.write("   }\r\n");
      out.write("</script>\r\n");
      out.write("<!-- \r\n");
      out.write("======================== [[글목록 화면 시작]] =========================\r\n");
      out.write("JEasyUI의 DataGrid API를 활용하여 작성\r\n");
      out.write("1)익스프레션을 이용해서 화면 처리\r\n");
      out.write("  :tr, td태그를 직접 작성해서 처리하는 방식\r\n");
      out.write("2)json포맷으로 처리해서 매핑\r\n");
      out.write("  :field명만 맞춰주면 자동으로 매핑\r\n");
      out.write(" -->\r\n");
      out.write(" <table id=\"dg_board\" title=\"글목록\" style=\"width:950px;height:500px\" class=\"easyui-datagrid\" data-options=\"singleSelect:'true',toolbar:'#tb_search,#tb_board'\">\r\n");
      out.write("    <!--헤더부분 추가 -->\r\n");
      out.write("    <thead>\r\n");
      out.write("       <tr>\r\n");
      out.write("          <th data-options=\"field:'BM_TITLE',width:'350px'\">제목</th>\r\n");
      out.write("            <th data-options=\"field:'BM_WRITER',width:'100px'\">작성자</th>\r\n");
      out.write("            <th data-options=\"field:'BM_DATE',width:'110px'\">작성일</th>\r\n");
      out.write("            <th data-options=\"field:'BS_FILE',width:'280px'\">첨부파일</th>\r\n");
      out.write("            <th data-options=\"field:'BM_HIT',width:'100px'\">조회수</th>\r\n");
      out.write("       </tr>\r\n");
      out.write("    </thead>\r\n");
      out.write("    <tbody>\r\n");
      out.write("<!--==================== 조회결과가 없는 경우 ==================-->    \r\n");

   if(tot==0){

      out.write("\r\n");
      out.write("       <tr>\r\n");
      out.write("          <td colspan=\"5\">&nbsp;조회 결과가 없습니다.</td>\r\n");
      out.write("       </tr>\r\n");
      out.write("       \r\n");
      out.write("<!--==================== 조회결과가 있는 경우 ==================-->    \r\n");

   }else if(tot > 0){
      for(int i=0;i<tot;i++){
         Map<String,Object> rmap = boardList.get(i);

      out.write("\r\n");
      out.write("       <tr>\r\n");
      out.write("          <td>\r\n");
      out.write("<!-- 너 댓글이니? -->\r\n");

   String imgPath = "\\images\\";
   if(Integer.parseInt(rmap.get("BM_POS").toString ()) > 0){
      for(int j=0;j<Integer.parseInt(rmap.get("BM_POS").toString());j++){
         out.print("&nbsp;&nbsp;");
      }

      out.write("\r\n");
      out.write("<img src=\"");
      out.print(imgPath );
      out.write("reply.gif\" border=\"0\">\r\n");

   }

      out.write("          \r\n");
      out.write("          <a href=\"javascript:boardDetail('");
      out.print(rmap.get("BM_NO"));
      out.write("')\">\r\n");
      out.write("          ");
      out.print(rmap.get("BM_TITLE") );
      out.write("\r\n");
      out.write("          </a>\r\n");
      out.write("          \r\n");
      out.write("          </td>\r\n");
      out.write("            <td>");
      out.print(rmap.get("BM_WRITER"));
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print(rmap.get("BM_DATE") );
      out.write("</td>\r\n");
      out.write("            <td>\r\n");
      out.write("            ");

            if(!"첨부파일이 없습니다.".equals(rmap.get("BS_FILE"))){
            
      out.write("\r\n");
      out.write("            <a href=\"javascript:downlaod('");
      out.print(rmap.get("BS_FILE") );
      out.write("')\">\r\n");
      out.write("            ");
      out.print(rmap.get("BS_FILE") );
      out.write("\r\n");
      out.write("            </a>\r\n");
      out.write("         ");

            }
         else{
         
      out.write("            \r\n");
      out.write("            ");
      out.print("첨부파일이 없습니다.");
      out.write("\r\n");
      out.write("         ");

         }
         
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            </td>\r\n");
      out.write("            <td>");
      out.print(rmap.get("BM_HIT") );
      out.write("</td>\r\n");
      out.write("       </tr>       \r\n");

      }
   }

      out.write("       \r\n");
      out.write("    </tbody>\r\n");
      out.write(" </table>\r\n");
      out.write(" <!--=========================[[ 페이지 네이션 추가 ]] ========================-->\r\n");
      out.write(" <table id=\"dg_board\" title=\"글목록\" style=\"width:950px;height:20px\">\r\n");
      out.write("    <tr>\r\n");
      out.write("       <td align=\"center\">\r\n");
      out.write("       <font size=\"14\">1 2 3 4 5 6 7 8 9 10</font>\r\n");
      out.write("       </td>\r\n");
      out.write("    </tr>\r\n");
      out.write(" </table>\r\n");
      out.write(" <!-- 조건검색 추가(툴바하기) -->\r\n");
      out.write(" <div id=\"tb_search\" style=\"padding:2px 5px;\">\r\n");
      out.write("    <select id=\"cb_search\" name=\"cb_search\" class=\"easyui-combobox\" panelHeight=\"auto\" style=\"width:100px\">\r\n");
      out.write("       <option selected value=\"\">선택</option>\r\n");
      out.write("       <option value=\"bm_title\">제목</option>\r\n");
      out.write("       <option value=\"bm_content\">내용</option>\r\n");
      out.write("       <option value=\"bm_writer\">작성자</option>\r\n");
      out.write("    </select>\r\n");
      out.write("    <input class=\"easyui-textbox\" id=\"keyword\" name=\"keyword\" style=\"width:320px\">\r\n");
      out.write("    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("    작성일:<input class=\"easyui-datebox\" id=\"bm_date\" name=\"bm_date\" style=\"width:120px\">\r\n");
      out.write(" </div>\r\n");
      out.write(" <div id=\"tb_board\" style=\"padding:2px 5px;\">\r\n");
      out.write("    <a href=\"javascript:boardList()\" class=\"easyui-linkbutton\" iconCls=\"icon-search\" plain=\"true\">조회</a>\r\n");
      out.write("    <a href=\"javascript:addForm()\" class=\"easyui-linkbutton\" iconCls=\"icon-edit\" plain=\"true\">입력</a>\r\n");
      out.write("    <a href=\"javascript:updForm()\" class=\"easyui-linkbutton\" iconCls=\"icon-add\" plain=\"true\">수정</a>\r\n");
      out.write("    <a href=\"javascript:delForm()\" class=\"easyui-linkbutton\" iconCls=\"icon-remove\" plain=\"true\">삭제</a>\r\n");
      out.write("</div>    \r\n");
      out.write("<!--======================[[ 글쓰기 화면 추가 시작 ]]=====================-->\r\n");
      out.write("    <!-- \r\n");
      out.write("    <div id=\"dlg_write\" class=\"easyui-dialog\" title=\"글쓰기\" data-options=\"iconCls:'icon-save'\" style=\"width:700px;height:500px;padding:10px\">\r\n");
      out.write("        The dialog content.\r\n");
      out.write("    </div>\r\n");
      out.write("     -->\r\n");
      out.write("<!--======================[[ 글쓰기 화면 추가   끝  ]]=====================-->\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
